{"version":3,"sources":["layout/Header.tsx","layout/Footer.tsx","chart/HitsChart.tsx","chart/HitsImages.tsx","export/Download.tsx","export/Select.tsx","export/Export.tsx","chart/HitsView.tsx","layout/Legend.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["layout_Header","Object","styles","root","flexGrow","_a","classes","react","AppBar_default","a","className","position","Toolbar_default","Typography_default","variant","color","layout_Footer","theme","maxWidth","spacing","unit","margin","padding","breakpoints","up","version","marginTop","textAlign","_b","HitsChart_HitsChart","_super","HitsChart","_this","apply","this","arguments","state","points","plot","onHover","event","props","tslib_es6","prototype","render","data","showlegend","today","moment","startOf","add","tomorrow","react_plotly_default","ref","plots","layout","autosize","dragmode","xaxis","type","range","unix","yaxis","fixedrange","showticklabels","ticks","tick0","dtick","tickvals","ticktext","l","r","t","b","legend","orientation","config","responsive","scrollZoom","displayModeBar","useResizeHandler","onClick","chart_HitsChart","width","height","chart_HitsImages","card","display","media","map","o","i","hit","src","pointIndex","key","alt","Download_Download","Download","onDownload","id","timestamps","x","push","Math","round","content","join","blob","Blob","FileSaver_min","button","icon","name","index_es","icons_index_es","export_Download","marginLeft","Select_Select","Select","onChecked","onSelect","target","checked","control","onChange","value","label","export_Select","Export_Export","Export","length","sort","setState","paper","row","export_Export","HitsView_HitsView","HitsView","hits","loadData","axios_default","get","then","response","componentDidMount","chart_HitsView","layout_Legend","text","src_App_0","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","react_dom","document","getElementById","URL","toString","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e9a27e5e.chunk.js","sourcesContent":["import {WithStyles, withStyles} from '@material-ui/core/styles';\nimport * as React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst Header = ({classes:{root}}:WithStyles<typeof styles>) => {\n  return (\n    <AppBar className={root} position=\"static\">\n      <Toolbar>\n        <Typography variant=\"title\" color=\"inherit\">\n          CREDO CUT - Brix results\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import {Theme, WithStyles, withStyles} from '@material-ui/core/styles';\nimport * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme:Theme) => ({\n  root: {\n    maxWidth: theme.spacing.unit * 110,\n    margin: 'auto',\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    [theme.breakpoints.up('sm')]: {\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    },\n  },\n  version: {\n    marginTop: theme.spacing.unit,\n    textAlign: \"center\" as \"center\"\n  },\n});\n\n\nconst Footer = ({classes:{root, version}}:WithStyles<typeof styles>) => {\n  return (\n    <footer className={root}>\n      <Typography className={version}>\n        Michał Niedźwiecki, Cracow University of Technology, 2018\n      </Typography>\n    </footer>\n  );\n};\n\nexport default withStyles(styles)(Footer);\n","import * as moment from 'moment';\nimport * as React from 'react';\n\nimport {PlotDatum} from \"plotly.js\";\nimport Plot from 'react-plotly.js';\n\nimport {withStyles, WithStyles} from \"@material-ui/core\";\n\nimport {HitsData} from \"./Types\";\n\n\nconst styles = () => ({\n  plot: {\n    width: '100%',\n    height: 400\n  }\n});\n\ninterface HitsChartProps {\n  data: HitsData;\n  showlegend?: boolean;\n  onHover: (points: PlotDatum[]) => void;\n}\n\nclass HitsChart extends React.PureComponent<HitsChartProps> {\n  public state = {points: []};\n\n  private plot = React.createRef<Plot>();\n\n  public render() {\n    const {classes:{plot}, data, showlegend = true} = this.props as HitsChartProps & WithStyles<typeof styles>;\n    const { points } = this.state;\n\n    const today = moment().startOf('hour').add(-6,'hour');\n    const tomorrow = moment().startOf('hour').add(-3,'hour');\n\n    return (\n      <Plot\n        ref={this.plot}\n        className={plot}\n        data={data.plots}\n        layout={\n          {\n            autosize: true,\n            dragmode: 'pan',\n            xaxis: {\n              type: 'date',\n              range: [today.unix() * 1000, tomorrow.unix() * 1000]\n            },\n            yaxis: {\n              fixedrange: true,\n              showticklabels: true,\n              ticks: 'outside',\n              tick0: 0,\n              dtick: 1,\n              tickvals: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n              ticktext: ['Hit']\n            },\n            margin: {\n              l: 0,\n              r: 0,\n              t: 24,\n              b: 24\n            },\n            showlegend,\n            legend: {\n              orientation: 'h'\n            }\n          }\n        }\n        config={{\n          responsive: true,\n          scrollZoom: true,\n          displayModeBar: true\n        }}\n        useResizeHandler={true}\n        onHover={this.onHover}\n        onClick={this.onHover}\n      />\n    );\n  }\n\n  private onHover = (event: Readonly<Plotly.PlotMouseEvent>) => {\n    this.props.onHover(event.points);\n  };\n}\n\nexport default withStyles(styles)(HitsChart);\n","import {Theme, WithStyles, withStyles} from '@material-ui/core/styles';\nimport * as React from 'react';\n\nimport {PlotDatum} from \"plotly.js\";\n\nconst styles = (theme:Theme) => ({\n  root: {\n    margin: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    [theme.breakpoints.up('sm')]: {\n      margin: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    },\n  },\n  card: {\n    display: 'inline'\n  },\n  media: {\n    height: 120,\n    width: 120,\n    margin: `${theme.spacing.unit}px`\n  }\n});\n\n\ninterface HitsImagesProps {\n  points: PlotDatum[];\n}\n\n\nconst HitsImages = ({classes:{root, card, media}, points}:WithStyles<typeof styles> & HitsImagesProps) => {\n  return (\n    <div className={root}>\n      { points.map((o, i) => (\n        // @ts-ignore\n        o.data.hit && (\n          // @ts-ignore\n          <img src={`png/${o.data.hit[o.pointIndex]}.png`} key={i} alt={'s'} className={media}/>\n        )\n      )) }\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HitsImages);\n","import * as React from \"react\";\nimport * as FileSaver from 'file-saver';\nimport {PlotData} from \"plotly.js\";\nimport {Button, Theme, withStyles, WithStyles} from \"@material-ui/core\";\nimport {CloudDownload} from \"@material-ui/icons\";\n\ninterface DownloadProps {\n  data: PlotData;\n  id: number;\n}\n\nconst styles = (theme:Theme) => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  icon: {\n    marginLeft: theme.spacing.unit\n  },\n});\n\n\nclass Download extends React.PureComponent<DownloadProps> {\n\n  public render(): React.ReactNode {\n    const { classes: {button, icon}, data: {name} } = this.props as WithStyles<typeof styles> & DownloadProps;\n\n    return (\n      <Button variant=\"contained\" color=\"primary\" className={button} onClick={this.onDownload}>\n        Download: {name}\n        <CloudDownload className={icon} />\n      </Button>\n    );\n  }\n\n  private onDownload = () => {\n    const { data, id } = this.props;\n    const timestamps:number[] = [];\n    // @ts-ignore\n    data.x.map((o, i) => timestamps.push(Math.round(o / 1000)));\n    const content = timestamps.join('\\r\\n');\n\n    const blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, `timestamp_${id}.txt`)\n  }\n}\n\nexport default withStyles(styles)(Download);\n","import * as React from \"react\";\nimport {Checkbox, FormControlLabel, Theme, withStyles, WithStyles} from \"@material-ui/core\";\n\ninterface SelectProps {\n  name: string;\n  id: number;\n  checked: boolean;\n  onSelect: (id:number, value:boolean) => void;\n}\n\nconst styles = (theme:Theme) => ({\n});\n\n\nclass Select extends React.PureComponent<SelectProps> {\n\n  public render(): React.ReactNode {\n    const { name, checked } = this.props as WithStyles<typeof styles> & SelectProps;\n\n    return (\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={this.onChecked}\n            value={true}\n          />\n        }\n        label={name}\n      />\n    );\n  }\n\n  private onChecked = (event:React.ChangeEvent<HTMLInputElement>) => {\n    const { id, onSelect } = this.props;\n    onSelect(id, event.target.checked);\n  }\n}\n\nexport default withStyles(styles)(Select);\n","import {HitsData} from \"../chart/Types\";\nimport * as React from \"react\";\nimport * as FileSaver from 'file-saver';\nimport Download from \"./Download\";\nimport {Button, FormGroup, Paper, Theme, WithStyles, withStyles} from \"@material-ui/core\";\nimport {CloudDownload} from \"@material-ui/icons\";\nimport Select from \"./Select\";\n\ninterface ExportProps {\n  data: HitsData;\n}\n\ninterface ExportState {\n  checked: {[key:string]:boolean}\n}\n\nconst styles = (theme:Theme) => ({\n  paper: {\n    margin: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    [theme.breakpoints.up('sm')]: {\n      margin: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    },\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  icon: {\n    marginLeft: theme.spacing.unit\n  },\n});\n\nclass Export extends React.PureComponent<ExportProps, ExportState> {\n  public state = { checked:{} };\n\n  public render(): React.ReactNode {\n    const {classes: {paper, button, icon}} = this.props as ExportProps & WithStyles<typeof styles>;\n    const {checked} = this.state;\n\n    return (\n      <>\n        <Paper className={paper}>\n        { this.props.data.plots.map((o, i) => (\n          i > 0 && (<Download data={o} id={i} key={i}/>)\n        ))}\n        </Paper>\n        <Paper className={paper}>\n          <FormGroup row>\n            { this.props.data.plots.map((o, i) => (\n              i > 0 && (<Select id={i} key={i} name={o.name} onSelect={this.onSelect} checked={!!checked[i]}/>)\n            ))}\n            <Button variant=\"contained\" color=\"secondary\" className={button} onClick={this.onDownload}>\n              Download selected\n              <CloudDownload className={icon} />\n            </Button>\n          </FormGroup>\n        </Paper>\n      </>\n    );\n  }\n\n  private onDownload = () => {\n    const { data } = this.props;\n    const { checked } = this.state;\n    const timestamps:number[] = [];\n    for (let i = 1; i < data.plots.length; i++) {\n      if (checked[i]) {\n        // @ts-ignore\n        data.plots[i].x.map((o, i) => timestamps.push(Math.round(o / 1000)));\n      }\n    }\n    timestamps.sort();\n    const content = timestamps.join('\\r\\n');\n\n    const blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, \"timestamp_0.txt\")\n  };\n\n  private onSelect = (id:number, value:boolean) => {\n    const {checked} = this.state;\n    this.setState({checked:{...checked, [id]:value}})\n  }\n}\n\nexport default withStyles(styles)(Export);\n","import axios, {AxiosResponse} from \"axios\";\nimport * as React from \"react\";\n\nimport {Theme, withStyles, WithStyles} from \"@material-ui/core\";\nimport HitsChart from \"./HitsChart\";\nimport {HitsData} from \"./Types\";\nimport {PlotDatum} from \"plotly.js\";\nimport HitsImages from \"./HitsImages\";\nimport Export from \"../export/Export\";\n\ninterface HitsViewState {\n  hits: HitsData | null;\n  points: PlotDatum[];\n}\n\nconst styles = (theme:Theme) => ({\n});\n\nclass HitsView extends React.Component<{}, HitsViewState> {\n\n  public state = {hits: null, points: []};\n\n  public loadData() {\n    axios\n      .get<HitsData>('credocut.json')\n      .then((response) => {\n        this.setState({hits: response.data});\n      })\n  }\n\n  public render() {\n    const { hits, points } = this.state;\n\n    if (hits !== null) {\n      return (\n        <>\n          <HitsChart data={hits} onHover={this.onHover}/>\n          <HitsImages points={points}/>\n          <Export data={hits}/>\n        </>\n      );\n    } else {\n      return (\n        <p>Loading...</p>\n      )\n    }\n  }\n\n  public componentDidMount(): void {\n    this.loadData();\n  }\n\n  private onHover = (points: PlotDatum[]) => {\n    this.setState({points});\n  }\n}\n\nexport default withStyles(styles)(HitsView);\n","import {Theme, WithStyles, withStyles} from '@material-ui/core/styles';\nimport * as React from 'react';\n\nimport {Paper} from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme:Theme) => ({\n  paper: {\n    margin: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    [theme.breakpoints.up('sm')]: {\n      margin: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n    },\n  },\n  text: {\n    textAlign: \"left\" as \"left\"\n  },\n});\n\n\nconst Legend = ({classes:{paper, text}}:WithStyles<typeof styles>) => {\n  return (\n    <Paper className={paper}>\n      <Typography className={text} variant=\"title\">\n        Help:\n      </Typography>\n      <Typography className={text} variant=\"body1\">\n        Please use <strong>Zoom in</strong> and <strong>Zoom out</strong> in chart's toolbar (right upper corner of chart).\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Legend);\n","import * as React from 'react';\nimport './App.css';\n\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport HitsView from \"./chart/HitsView\";\nimport Legend from \"./layout/Legend\";\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <>\n        <Header/>\n        <HitsView/>\n        <Legend/>\n        \n        <Footer/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}